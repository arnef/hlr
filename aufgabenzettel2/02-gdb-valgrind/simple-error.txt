Fehler in Zeile 13:
12	int buf[] = { 1, 1, 2, 3, 4, 5 };
13	return buf;

Es wird ein Verweis auf Speicher auf dem Stack zurückgegeben.
Dies fürt zu Zugrifffehlern, da Speicher auf dem Stack
am Ende einer Funktion automatisch wieder freigegeben wird. 

Fehler in Zeile 20:
19	int *buf = malloc (sizeof (char) * 4);
20	buf[2] = 2;

Es werden 4 bytes reserviert und dann bytes 8 bis 12 überschrieben.

Fehler in Zeile 29:
28	int *buf = (int *) &mistake2;
29	buf[0] = 3;

Es wird ein Funktionszeiger als Zeiger auf einen int reinterpretiert und dann
versucht den Code der Funktion mistake2 zu überschreiben. Dies schlägt fehl,
da Programmcode schreibgeschützt ist.


Fehler in Zeile 37 und Zeile 38:
36	int *buf = malloc (sizeof (char) * 4);
37	buf[4] = 4;
38	free (buf);free (buf);

Zeile 37: Es es werden bytes 16 bis 20 eines 4 byte langen Buffers überschrieben.
Zeile 38: Es wird Speicher freigegeben, welcher später noch in Zeile 51 verwendet werden soll.


Zeile 54: Es fehlt die Freigabe des in mistake4 allokierten speichers
Zeile 55: Es wird ein Zeiger freigegeben, welcher nicht der Anfang eines Puffers ist.

